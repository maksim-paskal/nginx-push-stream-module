apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nginx-push-stream-module.fullname" . }}
  labels:
    app: {{ include "nginx-push-stream-module.fullname" . }}
spec:
  selector:
    matchLabels:
      app: nginx-push-stream-module
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
{{ if .Values.metrics.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "8102"
{{ end }}
      labels:
        app: nginx-push-stream-module
{{ if .Values.podLabels }}
{{ toYaml .Values.podLabels | nindent 8 }}
{{ end }}
    spec:
      {{ if .Values.leaderElection.enabled }}
      serviceAccountName: "service-leader-election"
      {{ end }}
{{ if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | nindent 8 }}
{{ end }}
{{ if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | nindent 6 }}
{{ end }}
{{ if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | nindent 8 }}
{{ end }}
      volumes:
      - name: config
        configMap:
          name: {{ include "nginx-push-stream-module.fullname" . }}-config
      - name: tmp
        emptyDir:
          medium: Memory
      containers:
      - name: nginx-push-stream-module
        image: {{ printf "%s/%s:%s" (default .Values.image.registry .Values.global.imageRegistry) .Values.image.repository .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        securityContext:
{{ toYaml .Values.securityContext | nindent 10 }}
        resources:
{{ toYaml .Values.resources | nindent 10 }}
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 1
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 10
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: config
          mountPath: /etc/nginx/conf.d/
        ports:
        - containerPort: 8080
{{ if .Values.metrics.enabled }}
      - name: metrics
        image: {{ printf "%s/%s:%s" (default .Values.metrics.image.registry .Values.global.imageRegistry) .Values.metrics.image.repository .Values.metrics.image.tag }}
        imagePullPolicy: {{ .Values.metrics.image.pullPolicy | quote }}
        securityContext:
{{ toYaml .Values.securityContext | nindent 10 }}
        command:
{{ toYaml .Values.metrics.command | nindent 8 }}
        livenessProbe:
          httpGet:
            path: /metrics
            port: 8102
          initialDelaySeconds: 60
          periodSeconds: 10
{{ end }}
{{ if .Values.leaderElection.enabled }}
      - name: service-leader-election
        image: {{ printf "%s/%s:%s" (default .Values.leaderElection.image.registry .Values.global.imageRegistry) .Values.leaderElection.image.repository .Values.leaderElection.image.tag }}
        imagePullPolicy: {{ .Values.leaderElection.image.pullPolicy | quote }}
        args:
        {{ if .Values.leaderElection.leaseName }}
        - -lease-name={{ .Values.leaderElection.leaseName }}
        {{ else }}
        - -lease-name={{ include "nginx-push-stream-module.fullname" . }}
        {{ end }}
        {{ if .Values.leaderElection.serviceName }}
        - -service-name={{ .Values.leaderElection.serviceName }}
        {{ else }}
        - -service-name={{ include "nginx-push-stream-module.fullname" . }}
        {{ end }}
        securityContext:
{{ toYaml .Values.securityContext | nindent 10 }}
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        livenessProbe:
          httpGet:
            path: /healthz
            port: 28086
          initialDelaySeconds: 60
          periodSeconds: 10
{{ end }}